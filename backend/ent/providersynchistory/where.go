// Code generated by ent, DO NOT EDIT.

package providersynchistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/twohundreds/rezible/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldLTE(FieldID, id))
}

// DataType applies equality check predicate on the "data_type" field. It's identical to DataTypeEQ.
func DataType(v string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldEQ(FieldDataType, v))
}

// StartedAt applies equality check predicate on the "started_at" field. It's identical to StartedAtEQ.
func StartedAt(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldEQ(FieldStartedAt, v))
}

// FinishedAt applies equality check predicate on the "finished_at" field. It's identical to FinishedAtEQ.
func FinishedAt(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldEQ(FieldFinishedAt, v))
}

// NumMutations applies equality check predicate on the "num_mutations" field. It's identical to NumMutationsEQ.
func NumMutations(v int) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldEQ(FieldNumMutations, v))
}

// DataTypeEQ applies the EQ predicate on the "data_type" field.
func DataTypeEQ(v string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldEQ(FieldDataType, v))
}

// DataTypeNEQ applies the NEQ predicate on the "data_type" field.
func DataTypeNEQ(v string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldNEQ(FieldDataType, v))
}

// DataTypeIn applies the In predicate on the "data_type" field.
func DataTypeIn(vs ...string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldIn(FieldDataType, vs...))
}

// DataTypeNotIn applies the NotIn predicate on the "data_type" field.
func DataTypeNotIn(vs ...string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldNotIn(FieldDataType, vs...))
}

// DataTypeGT applies the GT predicate on the "data_type" field.
func DataTypeGT(v string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldGT(FieldDataType, v))
}

// DataTypeGTE applies the GTE predicate on the "data_type" field.
func DataTypeGTE(v string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldGTE(FieldDataType, v))
}

// DataTypeLT applies the LT predicate on the "data_type" field.
func DataTypeLT(v string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldLT(FieldDataType, v))
}

// DataTypeLTE applies the LTE predicate on the "data_type" field.
func DataTypeLTE(v string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldLTE(FieldDataType, v))
}

// DataTypeContains applies the Contains predicate on the "data_type" field.
func DataTypeContains(v string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldContains(FieldDataType, v))
}

// DataTypeHasPrefix applies the HasPrefix predicate on the "data_type" field.
func DataTypeHasPrefix(v string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldHasPrefix(FieldDataType, v))
}

// DataTypeHasSuffix applies the HasSuffix predicate on the "data_type" field.
func DataTypeHasSuffix(v string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldHasSuffix(FieldDataType, v))
}

// DataTypeEqualFold applies the EqualFold predicate on the "data_type" field.
func DataTypeEqualFold(v string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldEqualFold(FieldDataType, v))
}

// DataTypeContainsFold applies the ContainsFold predicate on the "data_type" field.
func DataTypeContainsFold(v string) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldContainsFold(FieldDataType, v))
}

// StartedAtEQ applies the EQ predicate on the "started_at" field.
func StartedAtEQ(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldEQ(FieldStartedAt, v))
}

// StartedAtNEQ applies the NEQ predicate on the "started_at" field.
func StartedAtNEQ(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldNEQ(FieldStartedAt, v))
}

// StartedAtIn applies the In predicate on the "started_at" field.
func StartedAtIn(vs ...time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldIn(FieldStartedAt, vs...))
}

// StartedAtNotIn applies the NotIn predicate on the "started_at" field.
func StartedAtNotIn(vs ...time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldNotIn(FieldStartedAt, vs...))
}

// StartedAtGT applies the GT predicate on the "started_at" field.
func StartedAtGT(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldGT(FieldStartedAt, v))
}

// StartedAtGTE applies the GTE predicate on the "started_at" field.
func StartedAtGTE(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldGTE(FieldStartedAt, v))
}

// StartedAtLT applies the LT predicate on the "started_at" field.
func StartedAtLT(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldLT(FieldStartedAt, v))
}

// StartedAtLTE applies the LTE predicate on the "started_at" field.
func StartedAtLTE(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldLTE(FieldStartedAt, v))
}

// FinishedAtEQ applies the EQ predicate on the "finished_at" field.
func FinishedAtEQ(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldEQ(FieldFinishedAt, v))
}

// FinishedAtNEQ applies the NEQ predicate on the "finished_at" field.
func FinishedAtNEQ(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldNEQ(FieldFinishedAt, v))
}

// FinishedAtIn applies the In predicate on the "finished_at" field.
func FinishedAtIn(vs ...time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldIn(FieldFinishedAt, vs...))
}

// FinishedAtNotIn applies the NotIn predicate on the "finished_at" field.
func FinishedAtNotIn(vs ...time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldNotIn(FieldFinishedAt, vs...))
}

// FinishedAtGT applies the GT predicate on the "finished_at" field.
func FinishedAtGT(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldGT(FieldFinishedAt, v))
}

// FinishedAtGTE applies the GTE predicate on the "finished_at" field.
func FinishedAtGTE(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldGTE(FieldFinishedAt, v))
}

// FinishedAtLT applies the LT predicate on the "finished_at" field.
func FinishedAtLT(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldLT(FieldFinishedAt, v))
}

// FinishedAtLTE applies the LTE predicate on the "finished_at" field.
func FinishedAtLTE(v time.Time) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldLTE(FieldFinishedAt, v))
}

// NumMutationsEQ applies the EQ predicate on the "num_mutations" field.
func NumMutationsEQ(v int) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldEQ(FieldNumMutations, v))
}

// NumMutationsNEQ applies the NEQ predicate on the "num_mutations" field.
func NumMutationsNEQ(v int) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldNEQ(FieldNumMutations, v))
}

// NumMutationsIn applies the In predicate on the "num_mutations" field.
func NumMutationsIn(vs ...int) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldIn(FieldNumMutations, vs...))
}

// NumMutationsNotIn applies the NotIn predicate on the "num_mutations" field.
func NumMutationsNotIn(vs ...int) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldNotIn(FieldNumMutations, vs...))
}

// NumMutationsGT applies the GT predicate on the "num_mutations" field.
func NumMutationsGT(v int) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldGT(FieldNumMutations, v))
}

// NumMutationsGTE applies the GTE predicate on the "num_mutations" field.
func NumMutationsGTE(v int) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldGTE(FieldNumMutations, v))
}

// NumMutationsLT applies the LT predicate on the "num_mutations" field.
func NumMutationsLT(v int) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldLT(FieldNumMutations, v))
}

// NumMutationsLTE applies the LTE predicate on the "num_mutations" field.
func NumMutationsLTE(v int) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.FieldLTE(FieldNumMutations, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProviderSyncHistory) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProviderSyncHistory) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProviderSyncHistory) predicate.ProviderSyncHistory {
	return predicate.ProviderSyncHistory(sql.NotPredicates(p))
}
