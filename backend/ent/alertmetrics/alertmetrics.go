// Code generated by ent, DO NOT EDIT.

package alertmetrics

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the alertmetrics type in the database.
	Label = "alert_metrics"
	// FieldEventCount holds the string denoting the event_count field in the database.
	FieldEventCount = "event_count"
	// FieldInterruptCount holds the string denoting the interrupt_count field in the database.
	FieldInterruptCount = "interrupt_count"
	// FieldNightInterruptCount holds the string denoting the night_interrupt_count field in the database.
	FieldNightInterruptCount = "night_interrupt_count"
	// FieldIncidents holds the string denoting the incidents field in the database.
	FieldIncidents = "incidents"
	// FieldFeedbackCount holds the string denoting the feedback_count field in the database.
	FieldFeedbackCount = "feedback_count"
	// FieldFeedbackActionable holds the string denoting the feedback_actionable field in the database.
	FieldFeedbackActionable = "feedback_actionable"
	// FieldFeedbackAccurate holds the string denoting the feedback_accurate field in the database.
	FieldFeedbackAccurate = "feedback_accurate"
	// FieldFeedbackAccurateUnknown holds the string denoting the feedback_accurate_unknown field in the database.
	FieldFeedbackAccurateUnknown = "feedback_accurate_unknown"
	// FieldFeedbackDocsAvailable holds the string denoting the feedback_docs_available field in the database.
	FieldFeedbackDocsAvailable = "feedback_docs_available"
	// FieldFeedbackDocsNeedUpdate holds the string denoting the feedback_docs_need_update field in the database.
	FieldFeedbackDocsNeedUpdate = "feedback_docs_need_update"
	// Table holds the table name of the alertmetrics in the database.
	Table = "alert_metrics"
)

// Columns holds all SQL columns for alertmetrics fields.
var Columns = []string{
	FieldEventCount,
	FieldInterruptCount,
	FieldNightInterruptCount,
	FieldIncidents,
	FieldFeedbackCount,
	FieldFeedbackActionable,
	FieldFeedbackAccurate,
	FieldFeedbackAccurateUnknown,
	FieldFeedbackDocsAvailable,
	FieldFeedbackDocsNeedUpdate,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the AlertMetrics queries.
type OrderOption func(*sql.Selector)

// ByEventCount orders the results by the event_count field.
func ByEventCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEventCount, opts...).ToFunc()
}

// ByInterruptCount orders the results by the interrupt_count field.
func ByInterruptCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInterruptCount, opts...).ToFunc()
}

// ByNightInterruptCount orders the results by the night_interrupt_count field.
func ByNightInterruptCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNightInterruptCount, opts...).ToFunc()
}

// ByIncidents orders the results by the incidents field.
func ByIncidents(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIncidents, opts...).ToFunc()
}

// ByFeedbackCount orders the results by the feedback_count field.
func ByFeedbackCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFeedbackCount, opts...).ToFunc()
}

// ByFeedbackActionable orders the results by the feedback_actionable field.
func ByFeedbackActionable(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFeedbackActionable, opts...).ToFunc()
}

// ByFeedbackAccurate orders the results by the feedback_accurate field.
func ByFeedbackAccurate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFeedbackAccurate, opts...).ToFunc()
}

// ByFeedbackAccurateUnknown orders the results by the feedback_accurate_unknown field.
func ByFeedbackAccurateUnknown(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFeedbackAccurateUnknown, opts...).ToFunc()
}

// ByFeedbackDocsAvailable orders the results by the feedback_docs_available field.
func ByFeedbackDocsAvailable(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFeedbackDocsAvailable, opts...).ToFunc()
}

// ByFeedbackDocsNeedUpdate orders the results by the feedback_docs_need_update field.
func ByFeedbackDocsNeedUpdate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFeedbackDocsNeedUpdate, opts...).ToFunc()
}
