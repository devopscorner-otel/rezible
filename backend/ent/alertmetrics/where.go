// Code generated by ent, DO NOT EDIT.

package alertmetrics

import (
	"entgo.io/ent/dialect/sql"
	"github.com/rezible/rezible/ent/predicate"
)

// EventCount applies equality check predicate on the "event_count" field. It's identical to EventCountEQ.
func EventCount(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldEventCount, v))
}

// InterruptCount applies equality check predicate on the "interrupt_count" field. It's identical to InterruptCountEQ.
func InterruptCount(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldInterruptCount, v))
}

// NightInterruptCount applies equality check predicate on the "night_interrupt_count" field. It's identical to NightInterruptCountEQ.
func NightInterruptCount(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldNightInterruptCount, v))
}

// Incidents applies equality check predicate on the "incidents" field. It's identical to IncidentsEQ.
func Incidents(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldIncidents, v))
}

// FeedbackCount applies equality check predicate on the "feedback_count" field. It's identical to FeedbackCountEQ.
func FeedbackCount(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldFeedbackCount, v))
}

// FeedbackActionable applies equality check predicate on the "feedback_actionable" field. It's identical to FeedbackActionableEQ.
func FeedbackActionable(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldFeedbackActionable, v))
}

// FeedbackAccurate applies equality check predicate on the "feedback_accurate" field. It's identical to FeedbackAccurateEQ.
func FeedbackAccurate(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldFeedbackAccurate, v))
}

// FeedbackAccurateUnknown applies equality check predicate on the "feedback_accurate_unknown" field. It's identical to FeedbackAccurateUnknownEQ.
func FeedbackAccurateUnknown(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldFeedbackAccurateUnknown, v))
}

// FeedbackDocsAvailable applies equality check predicate on the "feedback_docs_available" field. It's identical to FeedbackDocsAvailableEQ.
func FeedbackDocsAvailable(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldFeedbackDocsAvailable, v))
}

// FeedbackDocsNeedUpdate applies equality check predicate on the "feedback_docs_need_update" field. It's identical to FeedbackDocsNeedUpdateEQ.
func FeedbackDocsNeedUpdate(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldFeedbackDocsNeedUpdate, v))
}

// EventCountEQ applies the EQ predicate on the "event_count" field.
func EventCountEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldEventCount, v))
}

// EventCountNEQ applies the NEQ predicate on the "event_count" field.
func EventCountNEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNEQ(FieldEventCount, v))
}

// EventCountIn applies the In predicate on the "event_count" field.
func EventCountIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldIn(FieldEventCount, vs...))
}

// EventCountNotIn applies the NotIn predicate on the "event_count" field.
func EventCountNotIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNotIn(FieldEventCount, vs...))
}

// EventCountGT applies the GT predicate on the "event_count" field.
func EventCountGT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGT(FieldEventCount, v))
}

// EventCountGTE applies the GTE predicate on the "event_count" field.
func EventCountGTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGTE(FieldEventCount, v))
}

// EventCountLT applies the LT predicate on the "event_count" field.
func EventCountLT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLT(FieldEventCount, v))
}

// EventCountLTE applies the LTE predicate on the "event_count" field.
func EventCountLTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLTE(FieldEventCount, v))
}

// InterruptCountEQ applies the EQ predicate on the "interrupt_count" field.
func InterruptCountEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldInterruptCount, v))
}

// InterruptCountNEQ applies the NEQ predicate on the "interrupt_count" field.
func InterruptCountNEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNEQ(FieldInterruptCount, v))
}

// InterruptCountIn applies the In predicate on the "interrupt_count" field.
func InterruptCountIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldIn(FieldInterruptCount, vs...))
}

// InterruptCountNotIn applies the NotIn predicate on the "interrupt_count" field.
func InterruptCountNotIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNotIn(FieldInterruptCount, vs...))
}

// InterruptCountGT applies the GT predicate on the "interrupt_count" field.
func InterruptCountGT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGT(FieldInterruptCount, v))
}

// InterruptCountGTE applies the GTE predicate on the "interrupt_count" field.
func InterruptCountGTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGTE(FieldInterruptCount, v))
}

// InterruptCountLT applies the LT predicate on the "interrupt_count" field.
func InterruptCountLT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLT(FieldInterruptCount, v))
}

// InterruptCountLTE applies the LTE predicate on the "interrupt_count" field.
func InterruptCountLTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLTE(FieldInterruptCount, v))
}

// NightInterruptCountEQ applies the EQ predicate on the "night_interrupt_count" field.
func NightInterruptCountEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldNightInterruptCount, v))
}

// NightInterruptCountNEQ applies the NEQ predicate on the "night_interrupt_count" field.
func NightInterruptCountNEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNEQ(FieldNightInterruptCount, v))
}

// NightInterruptCountIn applies the In predicate on the "night_interrupt_count" field.
func NightInterruptCountIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldIn(FieldNightInterruptCount, vs...))
}

// NightInterruptCountNotIn applies the NotIn predicate on the "night_interrupt_count" field.
func NightInterruptCountNotIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNotIn(FieldNightInterruptCount, vs...))
}

// NightInterruptCountGT applies the GT predicate on the "night_interrupt_count" field.
func NightInterruptCountGT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGT(FieldNightInterruptCount, v))
}

// NightInterruptCountGTE applies the GTE predicate on the "night_interrupt_count" field.
func NightInterruptCountGTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGTE(FieldNightInterruptCount, v))
}

// NightInterruptCountLT applies the LT predicate on the "night_interrupt_count" field.
func NightInterruptCountLT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLT(FieldNightInterruptCount, v))
}

// NightInterruptCountLTE applies the LTE predicate on the "night_interrupt_count" field.
func NightInterruptCountLTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLTE(FieldNightInterruptCount, v))
}

// IncidentsEQ applies the EQ predicate on the "incidents" field.
func IncidentsEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldIncidents, v))
}

// IncidentsNEQ applies the NEQ predicate on the "incidents" field.
func IncidentsNEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNEQ(FieldIncidents, v))
}

// IncidentsIn applies the In predicate on the "incidents" field.
func IncidentsIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldIn(FieldIncidents, vs...))
}

// IncidentsNotIn applies the NotIn predicate on the "incidents" field.
func IncidentsNotIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNotIn(FieldIncidents, vs...))
}

// IncidentsGT applies the GT predicate on the "incidents" field.
func IncidentsGT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGT(FieldIncidents, v))
}

// IncidentsGTE applies the GTE predicate on the "incidents" field.
func IncidentsGTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGTE(FieldIncidents, v))
}

// IncidentsLT applies the LT predicate on the "incidents" field.
func IncidentsLT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLT(FieldIncidents, v))
}

// IncidentsLTE applies the LTE predicate on the "incidents" field.
func IncidentsLTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLTE(FieldIncidents, v))
}

// FeedbackCountEQ applies the EQ predicate on the "feedback_count" field.
func FeedbackCountEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldFeedbackCount, v))
}

// FeedbackCountNEQ applies the NEQ predicate on the "feedback_count" field.
func FeedbackCountNEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNEQ(FieldFeedbackCount, v))
}

// FeedbackCountIn applies the In predicate on the "feedback_count" field.
func FeedbackCountIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldIn(FieldFeedbackCount, vs...))
}

// FeedbackCountNotIn applies the NotIn predicate on the "feedback_count" field.
func FeedbackCountNotIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNotIn(FieldFeedbackCount, vs...))
}

// FeedbackCountGT applies the GT predicate on the "feedback_count" field.
func FeedbackCountGT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGT(FieldFeedbackCount, v))
}

// FeedbackCountGTE applies the GTE predicate on the "feedback_count" field.
func FeedbackCountGTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGTE(FieldFeedbackCount, v))
}

// FeedbackCountLT applies the LT predicate on the "feedback_count" field.
func FeedbackCountLT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLT(FieldFeedbackCount, v))
}

// FeedbackCountLTE applies the LTE predicate on the "feedback_count" field.
func FeedbackCountLTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLTE(FieldFeedbackCount, v))
}

// FeedbackActionableEQ applies the EQ predicate on the "feedback_actionable" field.
func FeedbackActionableEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldFeedbackActionable, v))
}

// FeedbackActionableNEQ applies the NEQ predicate on the "feedback_actionable" field.
func FeedbackActionableNEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNEQ(FieldFeedbackActionable, v))
}

// FeedbackActionableIn applies the In predicate on the "feedback_actionable" field.
func FeedbackActionableIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldIn(FieldFeedbackActionable, vs...))
}

// FeedbackActionableNotIn applies the NotIn predicate on the "feedback_actionable" field.
func FeedbackActionableNotIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNotIn(FieldFeedbackActionable, vs...))
}

// FeedbackActionableGT applies the GT predicate on the "feedback_actionable" field.
func FeedbackActionableGT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGT(FieldFeedbackActionable, v))
}

// FeedbackActionableGTE applies the GTE predicate on the "feedback_actionable" field.
func FeedbackActionableGTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGTE(FieldFeedbackActionable, v))
}

// FeedbackActionableLT applies the LT predicate on the "feedback_actionable" field.
func FeedbackActionableLT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLT(FieldFeedbackActionable, v))
}

// FeedbackActionableLTE applies the LTE predicate on the "feedback_actionable" field.
func FeedbackActionableLTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLTE(FieldFeedbackActionable, v))
}

// FeedbackAccurateEQ applies the EQ predicate on the "feedback_accurate" field.
func FeedbackAccurateEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldFeedbackAccurate, v))
}

// FeedbackAccurateNEQ applies the NEQ predicate on the "feedback_accurate" field.
func FeedbackAccurateNEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNEQ(FieldFeedbackAccurate, v))
}

// FeedbackAccurateIn applies the In predicate on the "feedback_accurate" field.
func FeedbackAccurateIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldIn(FieldFeedbackAccurate, vs...))
}

// FeedbackAccurateNotIn applies the NotIn predicate on the "feedback_accurate" field.
func FeedbackAccurateNotIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNotIn(FieldFeedbackAccurate, vs...))
}

// FeedbackAccurateGT applies the GT predicate on the "feedback_accurate" field.
func FeedbackAccurateGT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGT(FieldFeedbackAccurate, v))
}

// FeedbackAccurateGTE applies the GTE predicate on the "feedback_accurate" field.
func FeedbackAccurateGTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGTE(FieldFeedbackAccurate, v))
}

// FeedbackAccurateLT applies the LT predicate on the "feedback_accurate" field.
func FeedbackAccurateLT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLT(FieldFeedbackAccurate, v))
}

// FeedbackAccurateLTE applies the LTE predicate on the "feedback_accurate" field.
func FeedbackAccurateLTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLTE(FieldFeedbackAccurate, v))
}

// FeedbackAccurateUnknownEQ applies the EQ predicate on the "feedback_accurate_unknown" field.
func FeedbackAccurateUnknownEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldFeedbackAccurateUnknown, v))
}

// FeedbackAccurateUnknownNEQ applies the NEQ predicate on the "feedback_accurate_unknown" field.
func FeedbackAccurateUnknownNEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNEQ(FieldFeedbackAccurateUnknown, v))
}

// FeedbackAccurateUnknownIn applies the In predicate on the "feedback_accurate_unknown" field.
func FeedbackAccurateUnknownIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldIn(FieldFeedbackAccurateUnknown, vs...))
}

// FeedbackAccurateUnknownNotIn applies the NotIn predicate on the "feedback_accurate_unknown" field.
func FeedbackAccurateUnknownNotIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNotIn(FieldFeedbackAccurateUnknown, vs...))
}

// FeedbackAccurateUnknownGT applies the GT predicate on the "feedback_accurate_unknown" field.
func FeedbackAccurateUnknownGT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGT(FieldFeedbackAccurateUnknown, v))
}

// FeedbackAccurateUnknownGTE applies the GTE predicate on the "feedback_accurate_unknown" field.
func FeedbackAccurateUnknownGTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGTE(FieldFeedbackAccurateUnknown, v))
}

// FeedbackAccurateUnknownLT applies the LT predicate on the "feedback_accurate_unknown" field.
func FeedbackAccurateUnknownLT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLT(FieldFeedbackAccurateUnknown, v))
}

// FeedbackAccurateUnknownLTE applies the LTE predicate on the "feedback_accurate_unknown" field.
func FeedbackAccurateUnknownLTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLTE(FieldFeedbackAccurateUnknown, v))
}

// FeedbackDocsAvailableEQ applies the EQ predicate on the "feedback_docs_available" field.
func FeedbackDocsAvailableEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldFeedbackDocsAvailable, v))
}

// FeedbackDocsAvailableNEQ applies the NEQ predicate on the "feedback_docs_available" field.
func FeedbackDocsAvailableNEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNEQ(FieldFeedbackDocsAvailable, v))
}

// FeedbackDocsAvailableIn applies the In predicate on the "feedback_docs_available" field.
func FeedbackDocsAvailableIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldIn(FieldFeedbackDocsAvailable, vs...))
}

// FeedbackDocsAvailableNotIn applies the NotIn predicate on the "feedback_docs_available" field.
func FeedbackDocsAvailableNotIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNotIn(FieldFeedbackDocsAvailable, vs...))
}

// FeedbackDocsAvailableGT applies the GT predicate on the "feedback_docs_available" field.
func FeedbackDocsAvailableGT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGT(FieldFeedbackDocsAvailable, v))
}

// FeedbackDocsAvailableGTE applies the GTE predicate on the "feedback_docs_available" field.
func FeedbackDocsAvailableGTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGTE(FieldFeedbackDocsAvailable, v))
}

// FeedbackDocsAvailableLT applies the LT predicate on the "feedback_docs_available" field.
func FeedbackDocsAvailableLT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLT(FieldFeedbackDocsAvailable, v))
}

// FeedbackDocsAvailableLTE applies the LTE predicate on the "feedback_docs_available" field.
func FeedbackDocsAvailableLTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLTE(FieldFeedbackDocsAvailable, v))
}

// FeedbackDocsNeedUpdateEQ applies the EQ predicate on the "feedback_docs_need_update" field.
func FeedbackDocsNeedUpdateEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldEQ(FieldFeedbackDocsNeedUpdate, v))
}

// FeedbackDocsNeedUpdateNEQ applies the NEQ predicate on the "feedback_docs_need_update" field.
func FeedbackDocsNeedUpdateNEQ(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNEQ(FieldFeedbackDocsNeedUpdate, v))
}

// FeedbackDocsNeedUpdateIn applies the In predicate on the "feedback_docs_need_update" field.
func FeedbackDocsNeedUpdateIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldIn(FieldFeedbackDocsNeedUpdate, vs...))
}

// FeedbackDocsNeedUpdateNotIn applies the NotIn predicate on the "feedback_docs_need_update" field.
func FeedbackDocsNeedUpdateNotIn(vs ...int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldNotIn(FieldFeedbackDocsNeedUpdate, vs...))
}

// FeedbackDocsNeedUpdateGT applies the GT predicate on the "feedback_docs_need_update" field.
func FeedbackDocsNeedUpdateGT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGT(FieldFeedbackDocsNeedUpdate, v))
}

// FeedbackDocsNeedUpdateGTE applies the GTE predicate on the "feedback_docs_need_update" field.
func FeedbackDocsNeedUpdateGTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldGTE(FieldFeedbackDocsNeedUpdate, v))
}

// FeedbackDocsNeedUpdateLT applies the LT predicate on the "feedback_docs_need_update" field.
func FeedbackDocsNeedUpdateLT(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLT(FieldFeedbackDocsNeedUpdate, v))
}

// FeedbackDocsNeedUpdateLTE applies the LTE predicate on the "feedback_docs_need_update" field.
func FeedbackDocsNeedUpdateLTE(v int) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.FieldLTE(FieldFeedbackDocsNeedUpdate, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AlertMetrics) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AlertMetrics) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AlertMetrics) predicate.AlertMetrics {
	return predicate.AlertMetrics(sql.NotPredicates(p))
}
