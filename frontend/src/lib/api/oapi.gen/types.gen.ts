// This file is auto-generated by @hey-api/openapi-ts

export type AddIncidentDebriefUserMessageAttributes = {
    messageContent: string;
};

export type AddIncidentDebriefUserMessageRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: AddIncidentDebriefUserMessageAttributes;
};

export type AddIncidentDebriefUserMessageResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentDebriefMessage;
};

export type AddRetrospectiveDiscussionReplyRequestAttributes = {
    content: unknown;
    parentReplyId?: string;
};

export type AddRetrospectiveDiscussionReplyRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: AddRetrospectiveDiscussionReplyRequestAttributes;
};

export type AddRetrospectiveDiscussionReplyResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: RetrospectiveDiscussion;
};

export type AddSystemAnalysisComponentAttributes = {
    componentId: string;
    position: SystemAnalysisDiagramPosition;
};

export type AddSystemAnalysisComponentRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: AddSystemAnalysisComponentAttributes;
};

export type AddSystemAnalysisComponentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemAnalysisComponent;
};

export type CreateEnvironmentAttributes = {
    name: string;
};

export type CreateEnvironmentRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateEnvironmentAttributes;
};

export type CreateEnvironmentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Environment;
};

export type CreateFunctionalityAttributes = {
    name: string;
};

export type CreateFunctionalityRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateFunctionalityAttributes;
};

export type CreateFunctionalityResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Functionality;
};

export type CreateIncidentAttributes = {
    summary: string;
    title: string;
};

export type CreateIncidentDebriefQuestionAttributes = {
    content: string;
};

export type CreateIncidentDebriefQuestionRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateIncidentDebriefQuestionAttributes;
};

export type CreateIncidentDebriefQuestionResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentDebriefQuestion;
};

export type CreateIncidentEventAttributes = {
    kind: string;
    timestamp: string;
    title: string;
};

export type CreateIncidentEventRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateIncidentEventAttributes;
};

export type CreateIncidentEventResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentEvent;
};

export type CreateIncidentFieldAttributes = {
    incidentType?: string;
    name: string;
    options: Array<CreateIncidentFieldOptionAttributes>;
    required: boolean;
};

export type CreateIncidentFieldOptionAttributes = {
    fieldOptionType: 'custom' | 'derived';
    value: string;
};

export type fieldOptionType = 'custom' | 'derived';

export const fieldOptionType = {
    CUSTOM: 'custom',
    DERIVED: 'derived'
} as const;

export type CreateIncidentFieldRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateIncidentFieldAttributes;
};

export type CreateIncidentFieldResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentField;
};

export type CreateIncidentMilestoneAttributes = {
    timestamp: string;
    title: string;
    type: string;
};

export type CreateIncidentMilestoneRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateIncidentMilestoneAttributes;
};

export type CreateIncidentMilestoneResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentMilestone;
};

export type CreateIncidentRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateIncidentAttributes;
};

export type CreateIncidentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Incident;
};

export type CreateIncidentRoleAttributes = {
    name: string;
    required: boolean;
};

export type CreateIncidentRoleRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateIncidentRoleAttributes;
};

export type CreateIncidentRoleResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentRole;
};

export type CreateIncidentSeverityAttributes = {
    title: string;
};

export type CreateIncidentSeverityRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateIncidentSeverityAttributes;
};

export type CreateIncidentSeverityResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentSeverity;
};

export type CreateIncidentTagAttributes = {
    value: string;
};

export type CreateIncidentTagRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateIncidentTagAttributes;
};

export type CreateIncidentTagResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentTag;
};

export type CreateIncidentTypeAttributes = {
    name: string;
};

export type CreateIncidentTypeRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateIncidentTypeAttributes;
};

export type CreateIncidentTypeResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentType;
};

export type CreateIntegrationRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
};

export type CreateIntegrationResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Integration;
};

export type CreateMeetingScheduleAttributes = {
    attendees: MeetingAttendees;
    description?: string;
    durationMinutes: number;
    name: string;
    numRepetitions?: number;
    repeatMonthlyOn?: 'same_day' | 'same_weekday';
    repeats: 'daily' | 'weekly' | 'monthly';
    repetitionStep: number;
    sessionTitle: string;
    startsAt: DateTimeAnchor;
    untilDate?: string;
};

export type repeatMonthlyOn = 'same_day' | 'same_weekday';

export const repeatMonthlyOn = {
    SAME_DAY: 'same_day',
    SAME_WEEKDAY: 'same_weekday'
} as const;

export type repeats = 'daily' | 'weekly' | 'monthly';

export const repeats = {
    DAILY: 'daily',
    WEEKLY: 'weekly',
    MONTHLY: 'monthly'
} as const;

export type CreateMeetingScheduleRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateMeetingScheduleAttributes;
};

export type CreateMeetingScheduleResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: MeetingSchedule;
};

export type CreateMeetingSessionAttributes = {
    attendees: MeetingAttendees;
    description?: string;
    documentTemplateId?: string;
    durationMinutes: number;
    startsAt: DateTimeAnchor;
    title: string;
};

export type CreateMeetingSessionRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateMeetingSessionAttributes;
};

export type CreateMeetingSessionResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: MeetingSession;
};

export type CreateOncallShiftAnnotationRequestAttributes = {
    eventId: string;
    eventKind: 'incident' | 'alert' | 'toil' | 'ping';
    minutesOccupied: number;
    notes: string;
    occurredAt: string;
    pinned: boolean;
    title: string;
};

export type eventKind = 'incident' | 'alert' | 'toil' | 'ping';

export const eventKind = {
    INCIDENT: 'incident',
    ALERT: 'alert',
    TOIL: 'toil',
    PING: 'ping'
} as const;

export type CreateOncallShiftAnnotationRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateOncallShiftAnnotationRequestAttributes;
};

export type CreateOncallShiftAnnotationResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: OncallShiftAnnotation;
};

export type CreateOncallShiftHandoverTemplateRequestAttributes = {
    sections: Array<OncallShiftHandoverTemplateSection>;
};

export type CreateOncallShiftHandoverTemplateRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateOncallShiftHandoverTemplateRequestAttributes;
};

export type CreateOncallShiftHandoverTemplateResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: OncallShiftHandoverTemplate;
};

export type CreateRetrospectiveDiscussionAttributes = {
    content: unknown;
};

export type CreateRetrospectiveDiscussionRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateRetrospectiveDiscussionAttributes;
};

export type CreateRetrospectiveDiscussionResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: RetrospectiveDiscussion;
};

export type CreateRetrospectiveReviewRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: RetrospectiveReviewAttributes;
};

export type CreateRetrospectiveReviewResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: RetrospectiveReview;
};

export type CreateSystemAnalysisRelationshipAttributes = {
    [key: string]: unknown;
};

export type CreateSystemAnalysisRelationshipRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateSystemAnalysisRelationshipAttributes;
};

export type CreateSystemAnalysisRelationshipResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemAnalysisRelationship;
};

export type CreateSystemComponentAttributes = {
    name: string;
};

export type CreateSystemComponentConstraintAttributes = {
    description: string;
    label: string;
};

export type CreateSystemComponentConstraintRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateSystemComponentConstraintAttributes;
};

export type CreateSystemComponentConstraintResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponentConstraint;
};

export type CreateSystemComponentControlAttributes = {
    description: string;
    label: string;
};

export type CreateSystemComponentControlRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateSystemComponentControlAttributes;
};

export type CreateSystemComponentControlResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponentControl;
};

export type CreateSystemComponentKindAttributes = {
    name: string;
};

export type CreateSystemComponentKindRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateSystemComponentKindAttributes;
};

export type CreateSystemComponentKindResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponentKind;
};

export type CreateSystemComponentRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateSystemComponentAttributes;
};

export type CreateSystemComponentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponent;
};

export type CreateSystemComponentSignalAttributes = {
    description: string;
    label: string;
};

export type CreateSystemComponentSignalRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateSystemComponentSignalAttributes;
};

export type CreateSystemComponentSignalResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponentSignal;
};

export type CreateTaskAttributes = {
    title: string;
};

export type CreateTaskRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateTaskAttributes;
};

export type CreateTaskResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Task;
};

export type CreateTeamAttributes = {
    name: string;
};

export type CreateTeamRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: CreateTeamAttributes;
};

export type CreateTeamResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Team;
};

export type DateTimeAnchor = {
    date: string;
    time: string;
    timezone: string;
};

export type DocumentEditorSession = {
    connectionUrl: string;
    documentName: string;
    token: string;
};

export type DocumentEditorSessionAuth = {
    readOnly: boolean;
    user: DocumentEditorSessionUser;
};

export type DocumentEditorSessionUser = {
    id: string;
    username: string;
};

export type Environment = {
    attributes: EnvironmentAttributes;
    id: string;
};

export type EnvironmentAttributes = {
    archived: boolean;
    name: string;
};

export type ErrorDetail = {
    /**
     * Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
     */
    location?: string;
    /**
     * Error message text
     */
    message?: string;
    /**
     * The value at the given location
     */
    value?: unknown;
};

export type ErrorModel = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     */
    detail?: string;
    /**
     * Optional list of individual error details
     */
    errors?: Array<ErrorDetail>;
    /**
     * A URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * HTTP status code
     */
    status?: number;
    /**
     * A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
     */
    title?: string;
    /**
     * A URI reference to human-readable documentation for the error.
     */
    type?: string;
};

export type ExternalTicket = {
    provider: string;
};

export type Functionality = {
    attributes: FunctionalityAttributes;
    id: string;
};

export type FunctionalityAttributes = {
    name: string;
};

export type GetEnvironmentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Environment;
};

export type GetFunctionalityResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Functionality;
};

export type GetIncidentDebriefQuestionResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentDebriefQuestion;
};

export type GetIncidentDebriefResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentDebrief;
};

export type GetIncidentFieldResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentField;
};

export type GetIncidentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Incident;
};

export type GetIncidentRoleResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentRole;
};

export type GetIncidentSeverityResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentSeverity;
};

export type GetIncidentTagResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentTag;
};

export type GetIncidentTypeResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentType;
};

export type GetIncidentUserDebriefResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentDebrief;
};

export type GetIntegrationResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Integration;
};

export type GetMeetingScheduleResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: MeetingSchedule;
};

export type GetMeetingSessionResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: MeetingSession;
};

export type GetNextOncallShiftResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: OncallShift;
};

export type GetOncallRosterResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: OncallRoster;
};

export type GetOncallShiftHandoverResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: OncallShiftHandover;
};

export type GetOncallShiftHandoverTemplateResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: OncallShiftHandoverTemplate;
};

export type GetOncallShiftResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: OncallShift;
};

export type GetRetrospectiveDiscussionResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: RetrospectiveDiscussion;
};

export type GetRetrospectiveForIncidentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Retrospective;
};

export type GetRetrospectiveResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Retrospective;
};

export type GetSystemAnalysisComponentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemAnalysisComponent;
};

export type GetSystemAnalysisRelationshipResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemAnalysisRelationship;
};

export type GetSystemAnalysisResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemAnalysis;
};

export type GetSystemComponentConstraintResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponentConstraint;
};

export type GetSystemComponentControlResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponentControl;
};

export type GetSystemComponentKindResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponentKind;
};

export type GetSystemComponentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponent;
};

export type GetSystemComponentSignalResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponentSignal;
};

export type GetTaskResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Task;
};

export type GetTeamResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Team;
};

export type GetUserOncallDetailsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: UserOncallDetails;
};

export type GetUserResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: User;
};

export type GetUserSessionResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: UserSession;
};

export type Incident = {
    attributes: IncidentAttributes;
    id: string;
};

export type IncidentAttributes = {
    chatChannel: IncidentChatChannel;
    closedAt: string;
    currentStatus: 'started' | 'mitigated' | 'resolved' | 'closed';
    environments: Array<Environment>;
    linkedIncidents: Array<IncidentLink>;
    openedAt: string;
    private: boolean;
    roles: Array<IncidentRoleAssignment>;
    severity: IncidentSeverity;
    slug: string;
    summary: string;
    systemAnalysisId: string;
    tags: Array<IncidentTag>;
    tasks: Array<Task>;
    teams: Array<IncidentTeamAssignment>;
    ticket: ExternalTicket;
    title: string;
    type: IncidentType;
};

export type currentStatus = 'started' | 'mitigated' | 'resolved' | 'closed';

export const currentStatus = {
    STARTED: 'started',
    MITIGATED: 'mitigated',
    RESOLVED: 'resolved',
    CLOSED: 'closed'
} as const;

export type IncidentChatChannel = {
    id: string;
    private: boolean;
    provider: 'slack' | 'ms_teams';
    url: string;
};

export type provider = 'slack' | 'ms_teams';

export const provider = {
    SLACK: 'slack',
    MS_TEAMS: 'ms_teams'
} as const;

export type IncidentDebrief = {
    attributes: IncidentDebriefAttributes;
    id: string;
};

export type IncidentDebriefAttributes = {
    incidentId: string;
    required: boolean;
    started: boolean;
    userId: string;
};

export type IncidentDebriefMessage = {
    attributes: IncidentDebriefMessageAttributes;
    id: string;
};

export type IncidentDebriefMessageAttributes = {
    body: string;
    createdAt: string;
    type: 'user' | 'assistant' | 'question';
};

export type type = 'user' | 'assistant' | 'question';

export const type = {
    USER: 'user',
    ASSISTANT: 'assistant',
    QUESTION: 'question'
} as const;

export type IncidentDebriefQuestion = {
    attributes: IncidentDebriefQuestionAttributes;
    id: string;
};

export type IncidentDebriefQuestionAttributes = {
    content: string;
};

export type IncidentDebriefSuggestion = {
    attributes: IncidentDebriefSuggestionAttributes;
    id: string;
};

export type IncidentDebriefSuggestionAttributes = {
    content: string;
    ignored: boolean;
};

export type IncidentEvent = {
    attributes: IncidentEventAttributes;
    id: string;
};

export type IncidentEventAttributes = {
    contributingFactors: Array<IncidentEventContributingFactor>;
    decisionContext?: IncidentEventDecisionContext;
    description?: string;
    evidence: Array<IncidentEventEvidence>;
    incidentId: string;
    isKey: boolean;
    kind: 'observation' | 'action' | 'decision' | 'context';
    sequence: number;
    systemContext: Array<IncidentEventSystemComponent>;
    timestamp: string;
    title: string;
};

export type kind = 'observation' | 'action' | 'decision' | 'context';

export const kind = {
    OBSERVATION: 'observation',
    ACTION: 'action',
    DECISION: 'decision',
    CONTEXT: 'context'
} as const;

export type IncidentEventContributingFactor = {
    attributes: IncidentEventContributingFactorAttributes;
    id: string;
};

export type IncidentEventContributingFactorAttributes = {
    description: string;
    factorTypeId: string;
    links: Array<(string)>;
};

export type IncidentEventContributingFactorCategory = {
    attributes: IncidentEventContributingFactorCategoryAttributes;
    id: string;
};

export type IncidentEventContributingFactorCategoryAttributes = {
    description: string;
    factorTypes: Array<IncidentEventContributingFactorType>;
    name: string;
};

export type IncidentEventContributingFactorType = {
    attributes: IncidentEventContributingFactorTypeAttributes;
    id: string;
};

export type IncidentEventContributingFactorTypeAttributes = {
    description: string;
    examples: Array<(string)>;
    name: string;
};

export type IncidentEventDecisionContext = {
    constraints: Array<(string)>;
    decisionRationale: string;
    optionsConsidered: Array<(string)>;
};

export type IncidentEventEvidence = {
    attributes: IncidentEventEvidenceAttributes;
    id: string;
};

export type IncidentEventEvidenceAttributes = {
    properties?: {
        [key: string]: (string);
    };
    source: string;
    value: string;
};

export type IncidentEventSystemComponent = {
    attributes: IncidentEventSystemComponentAttributes;
    id: string;
};

export type IncidentEventSystemComponentAttributes = {
    analysisComponentId: string;
    description: string;
    status: string;
};

export type IncidentField = {
    attributes: IncidentFieldAttributes;
    id: string;
};

export type IncidentFieldAttributes = {
    archived: boolean;
    description: string;
    incidentType: IncidentType;
    name: string;
    options: Array<IncidentFieldOption>;
    required: boolean;
};

export type IncidentFieldOption = {
    attributes: IncidentFieldOptionAttributes;
    id: string;
};

export type IncidentFieldOptionAttributes = {
    archived: boolean;
    optionType: 'custom' | 'derived';
    value: string;
};

export type optionType = 'custom' | 'derived';

export const optionType = {
    CUSTOM: 'custom',
    DERIVED: 'derived'
} as const;

export type IncidentLink = {
    incidentId: string;
    incidentSummary: string;
    incidentTitle: string;
    linkType: 'duplicate_of' | 'parent' | 'sibling' | 'child';
};

export type linkType = 'duplicate_of' | 'parent' | 'sibling' | 'child';

export const linkType = {
    DUPLICATE_OF: 'duplicate_of',
    PARENT: 'parent',
    SIBLING: 'sibling',
    CHILD: 'child'
} as const;

export type IncidentMilestone = {
    attributes: IncidentMilestoneAttributes;
    id: string;
};

export type IncidentMilestoneAttributes = {
    incidentId: string;
    timestamp: string;
    title: string;
    type: string;
};

export type IncidentRole = {
    attributes: IncidentRoleAttributes;
    id: string;
};

export type IncidentRoleAssignment = {
    active: boolean;
    endedAt: string;
    role: IncidentRole;
    startedAt: string;
    user: User;
};

export type IncidentRoleAttributes = {
    archived: boolean;
    description: string;
    name: string;
    required: boolean;
};

export type IncidentSeverity = {
    attributes: IncidentSeverityAttributes;
    id: string;
};

export type IncidentSeverityAttributes = {
    archived: boolean;
    description: string;
    name: string;
};

export type IncidentTag = {
    attributes: IncidentTagAttributes;
    id: string;
};

export type IncidentTagAttributes = {
    archived: boolean;
    description: string;
    value: string;
};

export type IncidentTeamAssignment = {
    active: boolean;
    endedAt: string;
    startedAt: string;
    team: Team;
};

export type IncidentType = {
    attributes: IncidentTypeAttributes;
    id: string;
};

export type IncidentTypeAttributes = {
    archived: boolean;
    description: string;
    name: string;
};

export type Integration = {
    [key: string]: unknown;
};

export type ListEnvironmentsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<Environment>;
    pagination: ResponsePagination;
};

export type ListFunctionalitiesResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<Functionality>;
    pagination: ResponsePagination;
};

export type ListIncidentDebriefMessagesResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<IncidentDebriefMessage>;
};

export type ListIncidentDebriefQuestionsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<IncidentDebriefQuestion>;
    pagination: ResponsePagination;
};

export type ListIncidentDebriefSuggestionsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<IncidentDebriefSuggestion>;
};

export type ListIncidentEventContributingFactorsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<IncidentEventContributingFactorCategory>;
    pagination: ResponsePagination;
};

export type ListIncidentEventsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<IncidentEvent>;
    pagination: ResponsePagination;
};

export type ListIncidentFieldsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<IncidentField>;
    pagination: ResponsePagination;
};

export type ListIncidentMilestonesResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<IncidentMilestone>;
    pagination: ResponsePagination;
};

export type ListIncidentRolesResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<IncidentRole>;
    pagination: ResponsePagination;
};

export type ListIncidentSeveritiesResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<IncidentSeverity>;
    pagination: ResponsePagination;
};

export type ListIncidentsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<Incident>;
    pagination: ResponsePagination;
};

export type ListIncidentTagsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<IncidentTag>;
    pagination: ResponsePagination;
};

export type ListIncidentTypesResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<IncidentType>;
    pagination: ResponsePagination;
};

export type ListIntegrationsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<Integration>;
    pagination: ResponsePagination;
};

export type ListMeetingSchedulesResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<MeetingSchedule>;
    pagination: ResponsePagination;
};

export type ListMeetingSessionsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<MeetingSession>;
    pagination: ResponsePagination;
};

export type ListNotificationsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<UserNotification>;
    pagination: ResponsePagination;
};

export type ListOncallRostersResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<OncallRoster>;
    pagination: ResponsePagination;
};

export type ListOncallShiftAlertsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<OncallAlert>;
    pagination: ResponsePagination;
};

export type ListOncallShiftAnnotationsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<OncallShiftAnnotation>;
    pagination: ResponsePagination;
};

export type ListOncallShiftIncidentsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<Incident>;
    pagination: ResponsePagination;
};

export type ListOncallShiftsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<OncallShift>;
    pagination: ResponsePagination;
};

export type ListRetrospectiveDiscussionsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<RetrospectiveDiscussion>;
    pagination: ResponsePagination;
};

export type ListRetrospectiveReviewsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<RetrospectiveReview>;
    pagination: ResponsePagination;
};

export type ListRetrospectivesResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<Retrospective>;
    pagination: ResponsePagination;
};

export type ListSystemAnalysisComponentsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<SystemAnalysisComponent>;
    pagination: ResponsePagination;
};

export type ListSystemAnalysisRelationshipsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<SystemAnalysisRelationship>;
    pagination: ResponsePagination;
};

export type ListSystemComponentKindsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<SystemComponentKind>;
    pagination: ResponsePagination;
};

export type ListSystemComponentsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<SystemComponent>;
    pagination: ResponsePagination;
};

export type ListTasksResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<Task>;
    pagination: ResponsePagination;
};

export type ListTeamsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<Team>;
    pagination: ResponsePagination;
};

export type ListUserAssignmentsResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<UserAssignment>;
    pagination: ResponsePagination;
};

export type ListUsersResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Array<User>;
    pagination: ResponsePagination;
};

export type MeetingAttendees = {
    private: boolean;
    teams: Array<(string)>;
    users: Array<(string)>;
};

export type MeetingSchedule = {
    attributes: MeetingScheduleAttributes;
    id: string;
};

export type MeetingScheduleAttributes = {
    attendees: MeetingAttendees;
    documentTemplateId: string;
    hostTeamId: string;
    name: string;
    sessionTitle: string;
    timing: MeetingScheduleTiming;
};

export type MeetingScheduleTiming = {
    durationMinutes: number;
    indefinite: boolean;
    repeat: 'daily' | 'weekly' | 'monthly';
    repeatMonthlyOn: 'same_day' | 'same_weekday';
    repeatStep: number;
    startsAt: string;
    untilDate?: string;
    untilNumRepetitions?: number;
};

export type repeat = 'daily' | 'weekly' | 'monthly';

export const repeat = {
    DAILY: 'daily',
    WEEKLY: 'weekly',
    MONTHLY: 'monthly'
} as const;

export type MeetingSession = {
    attributes: MeetingSessionAttributes;
    id: string;
};

export type MeetingSessionAttributes = {
    attendees: MeetingAttendees;
    documentName: string;
    hostTeamId: string;
    meetingScheduleId: string;
    startsAt: string;
    title: string;
};

export type OncallAlert = {
    attributes: OncallAlertAttributes;
    id: string;
};

export type OncallAlertAttributes = {
    occurredAt: string;
    title: string;
};

export type OncallRoster = {
    attributes: OncallRosterAttributes;
    id: string;
};

export type OncallRosterAttributes = {
    handoverTemplateId: string;
    name: string;
    schedules: Array<OncallSchedule>;
    slug: string;
};

export type OncallSchedule = {
    attributes: OncallScheduleAttributes;
    id: string;
};

export type OncallScheduleAttributes = {
    description: string;
    participants: Array<OncallScheduleParticipant>;
    roster: OncallRoster;
    timezone: string;
};

export type OncallScheduleParticipant = {
    order: number;
    user: User;
};

export type OncallShift = {
    attributes: OncallShiftAttributes;
    id: string;
};

export type OncallShiftAnnotation = {
    attributes: OncallShiftAnnotationAttributes;
    id: string;
};

export type OncallShiftAnnotationAttributes = {
    eventId: string;
    kind: 'incident' | 'alert' | 'toil' | 'ping';
    minutesOccupied: number;
    notes: string;
    occurredAt: string;
    pinned: boolean;
    shiftId: string;
    title: string;
};

export type kind2 = 'incident' | 'alert' | 'toil' | 'ping';

export const kind2 = {
    INCIDENT: 'incident',
    ALERT: 'alert',
    TOIL: 'toil',
    PING: 'ping'
} as const;

export type OncallShiftAttributes = {
    covers: Array<OncallShiftCover>;
    endAt: string;
    role: string;
    roster: OncallRoster;
    startAt: string;
    user: User;
};

export type OncallShiftCover = {
    attributes: OncallShiftCoverAttributes;
    id: string;
};

export type OncallShiftCoverAttributes = {
    endAt: string;
    startAt: string;
    user: User;
};

export type OncallShiftHandover = {
    attributes: OncallShiftHandoverAttributes;
    id: string;
};

export type OncallShiftHandoverAttributes = {
    content: Array<OncallShiftHandoverSection>;
    createdAt: string;
    sentAt: string;
    shiftId: string;
    updatedAt: string;
};

export type OncallShiftHandoverSection = {
    header: string;
    jsonContent?: string;
    kind: 'regular' | 'annotations' | 'incidents';
};

export type kind3 = 'regular' | 'annotations' | 'incidents';

export const kind3 = {
    REGULAR: 'regular',
    ANNOTATIONS: 'annotations',
    INCIDENTS: 'incidents'
} as const;

export type OncallShiftHandoverTemplate = {
    attributes: OncallShiftHandoverTemplateAttributes;
    id: string;
};

export type OncallShiftHandoverTemplateAttributes = {
    sections: Array<OncallShiftHandoverTemplateSection>;
};

export type OncallShiftHandoverTemplateSection = {
    header: string;
    list: boolean;
    type: 'regular' | 'annotations' | 'incidents';
};

export type type2 = 'regular' | 'annotations' | 'incidents';

export const type2 = {
    REGULAR: 'regular',
    ANNOTATIONS: 'annotations',
    INCIDENTS: 'incidents'
} as const;

export type RequestDocumentEditorSessionAttributes = {
    documentName: string;
};

export type RequestDocumentEditorSessionRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: RequestDocumentEditorSessionAttributes;
};

export type RequestDocumentEditorSessionResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: DocumentEditorSession;
};

export type ResponsePagination = {
    next?: string;
    previous?: string;
    total: number;
};

export type Retrospective = {
    attributes: RetrospectiveAttributes;
    id: string;
};

export type RetrospectiveAttributes = {
    sections: Array<RetrospectiveSection>;
    state: 'draft' | 'in_review' | 'meeting_scheduled' | 'completed';
    type: 'quick' | 'full';
};

export type state = 'draft' | 'in_review' | 'meeting_scheduled' | 'completed';

export const state = {
    DRAFT: 'draft',
    IN_REVIEW: 'in_review',
    MEETING_SCHEDULED: 'meeting_scheduled',
    COMPLETED: 'completed'
} as const;

export type type3 = 'quick' | 'full';

export const type3 = {
    QUICK: 'quick',
    FULL: 'full'
} as const;

export type RetrospectiveDiscussion = {
    attributes: RetrospectiveDiscussionAttributes;
    id: string;
};

export type RetrospectiveDiscussionAttributes = {
    annotationId?: string;
    content: string;
    replies: Array<RetrospectiveDiscussionReply>;
    resolved: boolean;
};

export type RetrospectiveDiscussionReply = {
    attributes: RetrospectiveDiscussionReplyAttributes;
    id: string;
};

export type RetrospectiveDiscussionReplyAttributes = {
    content: string;
    replies: Array<RetrospectiveDiscussionReply>;
};

export type RetrospectiveReview = {
    attributes: RetrospectiveReviewAttributes;
    id: string;
};

export type RetrospectiveReviewAttributes = {
    [key: string]: unknown;
};

export type RetrospectiveSection = {
    description: string;
    field: string;
    title: string;
    type: 'field' | 'timeline';
};

export type type4 = 'field' | 'timeline';

export const type4 = {
    FIELD: 'field',
    TIMELINE: 'timeline'
} as const;

export type SendOncallShiftHandoverAttributes = {
    content: Array<OncallShiftHandoverSection>;
};

export type SendOncallShiftHandoverRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: SendOncallShiftHandoverAttributes;
};

export type SendOncallShiftHandoverResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: OncallShiftHandover;
};

export type SystemAnalysis = {
    attributes: SystemAnalysisAttributes;
    id: string;
};

export type SystemAnalysisAttributes = {
    components: Array<SystemAnalysisComponent>;
    relationships: Array<SystemAnalysisRelationship>;
};

export type SystemAnalysisComponent = {
    attributes: SystemAnalysisComponentAttributes;
    id: string;
};

export type SystemAnalysisComponentAttributes = {
    component: SystemComponent;
    position: SystemAnalysisDiagramPosition;
};

export type SystemAnalysisDiagramPosition = {
    x: number;
    y: number;
    z?: number;
};

export type SystemAnalysisRelationship = {
    attributes: SystemAnalysisRelationshipAttributes;
    id: string;
};

export type SystemAnalysisRelationshipAttributes = {
    controlActions: Array<SystemAnalysisRelationshipControlAction>;
    description: string;
    feedbackSignals: Array<SystemAnalysisRelationshipFeedbackSignal>;
    sourceId: string;
    targetId: string;
};

export type SystemAnalysisRelationshipControlAction = {
    attributes: SystemAnalysisRelationshipControlActionAttributes;
    id: string;
};

export type SystemAnalysisRelationshipControlActionAttributes = {
    controlId: string;
    description: string;
};

export type SystemAnalysisRelationshipFeedbackSignal = {
    attributes: SystemAnalysisRelationshipFeedbackSignalAttributes;
    id: string;
};

export type SystemAnalysisRelationshipFeedbackSignalAttributes = {
    description: string;
    signalId: string;
};

export type SystemComponent = {
    attributes: SystemComponentAttributes;
    id: string;
};

export type SystemComponentAttributes = {
    constraints: Array<SystemComponentConstraint>;
    controls: Array<SystemComponentControl>;
    description: string;
    kind: SystemComponentKind;
    name: string;
    properties: {
        [key: string]: unknown;
    };
    signals: Array<SystemComponentSignal>;
};

export type SystemComponentConstraint = {
    attributes: SystemComponentConstraintAttributes;
    id: string;
};

export type SystemComponentConstraintAttributes = {
    description: string;
    label: string;
};

export type SystemComponentControl = {
    attributes: SystemComponentControlAttributes;
    id: string;
};

export type SystemComponentControlAttributes = {
    description: string;
    label: string;
};

export type SystemComponentKind = {
    attributes: SystemComponentKindAttributes;
    id: string;
};

export type SystemComponentKindAttributes = {
    description: string;
    label: string;
};

export type SystemComponentSignal = {
    attributes: SystemComponentSignalAttributes;
    id: string;
};

export type SystemComponentSignalAttributes = {
    description: string;
    label: string;
};

export type Task = {
    attributes: TaskAttributes;
    id: string;
};

export type TaskAttributes = {
    description: string;
    name: string;
};

export type Team = {
    attributes: TeamAttributes;
    id: string;
};

export type TeamAttributes = {
    name: string;
    slug: string;
};

export type UpdateEnvironmentAttributes = {
    archived?: boolean;
    name?: string;
};

export type UpdateEnvironmentRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateEnvironmentAttributes;
};

export type UpdateEnvironmentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Environment;
};

export type UpdateFunctionalityAttributes = {
    name: (string) | null;
};

export type UpdateFunctionalityRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateFunctionalityAttributes;
};

export type UpdateFunctionalityResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Functionality;
};

export type UpdateIncidentAttributes = {
    environments?: Array<(string)>;
    private?: boolean;
    severityId?: string;
    summary?: string;
    title?: string;
};

export type UpdateIncidentDebriefAttributes = {
    status: 'started' | 'completed';
};

export type status = 'started' | 'completed';

export const status = {
    STARTED: 'started',
    COMPLETED: 'completed'
} as const;

export type UpdateIncidentDebriefQuestionAttributes = {
    content?: string;
};

export type UpdateIncidentDebriefQuestionRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateIncidentDebriefQuestionAttributes;
};

export type UpdateIncidentDebriefQuestionResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentDebriefQuestion;
};

export type UpdateIncidentDebriefRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateIncidentDebriefAttributes;
};

export type UpdateIncidentDebriefResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentDebrief;
};

export type UpdateIncidentEventAttributes = {
    kind?: string;
    timestamp?: string;
    title?: string;
};

export type UpdateIncidentEventRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateIncidentEventAttributes;
};

export type UpdateIncidentEventResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentEvent;
};

export type UpdateIncidentFieldAttributes = {
    archived?: boolean;
    incidentType?: string;
    name?: string;
    options?: Array<UpdateIncidentFieldOptionAttributes>;
    required?: boolean;
};

export type UpdateIncidentFieldOptionAttributes = {
    archived: boolean;
    fieldOptionType: 'custom' | 'derived';
    id?: string;
    value: string;
};

export type UpdateIncidentFieldRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateIncidentFieldAttributes;
};

export type UpdateIncidentFieldResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentField;
};

export type UpdateIncidentMilestoneAttributes = {
    timestamp: string;
    title: string;
    type: string;
};

export type UpdateIncidentMilestoneRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateIncidentMilestoneAttributes;
};

export type UpdateIncidentMilestoneResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentMilestone;
};

export type UpdateIncidentRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateIncidentAttributes;
};

export type UpdateIncidentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Incident;
};

export type UpdateIncidentRoleAttributes = {
    archived?: boolean;
    description?: string;
    name?: string;
    required?: boolean;
};

export type UpdateIncidentRoleRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateIncidentRoleAttributes;
};

export type UpdateIncidentRoleResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentRole;
};

export type UpdateIncidentSeverityAttributes = {
    archived?: boolean;
    name?: string;
};

export type UpdateIncidentSeverityRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateIncidentSeverityAttributes;
};

export type UpdateIncidentSeverityResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentSeverity;
};

export type UpdateIncidentTagAttributes = {
    archived?: boolean;
    value?: string;
};

export type UpdateIncidentTagRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateIncidentTagAttributes;
};

export type UpdateIncidentTagResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentTag;
};

export type UpdateIncidentTypeAttributes = {
    archived?: boolean;
    name?: string;
};

export type UpdateIncidentTypeRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateIncidentTypeAttributes;
};

export type UpdateIncidentTypeResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: IncidentType;
};

export type UpdateIntegrationAttributes = {
    [key: string]: unknown;
};

export type UpdateIntegrationRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateIntegrationAttributes;
};

export type UpdateIntegrationResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Integration;
};

export type UpdateMeetingScheduleAttributes = {
    [key: string]: unknown;
};

export type UpdateMeetingScheduleRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateMeetingScheduleAttributes;
};

export type UpdateMeetingScheduleResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: MeetingSchedule;
};

export type UpdateMeetingSessionAttributes = {
    [key: string]: unknown;
};

export type UpdateMeetingSessionRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateMeetingSessionAttributes;
};

export type UpdateMeetingSessionResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: MeetingSession;
};

export type UpdateOncallShiftAnnotationRequestAttributes = {
    minutesOccupied?: number;
    notes?: string;
    pinned?: boolean;
};

export type UpdateOncallShiftAnnotationRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateOncallShiftAnnotationRequestAttributes;
};

export type UpdateOncallShiftAnnotationResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: OncallShiftAnnotation;
};

export type UpdateOncallShiftHandoverTemplateRequestAttributes = {
    sections: Array<OncallShiftHandoverTemplateSection>;
};

export type UpdateOncallShiftHandoverTemplateRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateOncallShiftHandoverTemplateRequestAttributes;
};

export type UpdateOncallShiftHandoverTemplateResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: OncallShiftHandoverTemplate;
};

export type UpdateRetrospectiveDiscussionAttributes = {
    resolved?: boolean;
};

export type UpdateRetrospectiveDiscussionRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateRetrospectiveDiscussionAttributes;
};

export type UpdateRetrospectiveDiscussionResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: RetrospectiveDiscussion;
};

export type UpdateRetrospectiveReviewRequestAttributes = {
    [key: string]: unknown;
};

export type UpdateRetrospectiveReviewRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateRetrospectiveReviewRequestAttributes;
};

export type UpdateRetrospectiveReviewResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: RetrospectiveReview;
};

export type UpdateSystemAnalysisComponentAttributes = {
    role?: string;
};

export type UpdateSystemAnalysisComponentRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateSystemAnalysisComponentAttributes;
};

export type UpdateSystemAnalysisComponentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemAnalysisComponent;
};

export type UpdateSystemAnalysisRelationshipAttributes = {
    [key: string]: unknown;
};

export type UpdateSystemAnalysisRelationshipRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateSystemAnalysisRelationshipAttributes;
};

export type UpdateSystemAnalysisRelationshipResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemAnalysisRelationship;
};

export type UpdateSystemComponentAttributes = {
    [key: string]: unknown;
};

export type UpdateSystemComponentConstraintAttributes = {
    description: string;
    label: string;
};

export type UpdateSystemComponentConstraintRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateSystemComponentConstraintAttributes;
};

export type UpdateSystemComponentConstraintResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponentConstraint;
};

export type UpdateSystemComponentControlAttributes = {
    description: string;
    label: string;
};

export type UpdateSystemComponentControlRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateSystemComponentControlAttributes;
};

export type UpdateSystemComponentControlResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponentControl;
};

export type UpdateSystemComponentKindAttributes = {
    [key: string]: unknown;
};

export type UpdateSystemComponentKindRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateSystemComponentKindAttributes;
};

export type UpdateSystemComponentKindResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponentKind;
};

export type UpdateSystemComponentRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateSystemComponentAttributes;
};

export type UpdateSystemComponentResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponent;
};

export type UpdateSystemComponentSignalAttributes = {
    description: string;
    label: string;
};

export type UpdateSystemComponentSignalRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateSystemComponentSignalAttributes;
};

export type UpdateSystemComponentSignalResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: SystemComponentSignal;
};

export type UpdateTaskAttributes = {
    name?: (string) | null;
};

export type UpdateTaskRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateTaskAttributes;
};

export type UpdateTaskResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Task;
};

export type UpdateTeamAttributes = {
    name: (string) | null;
};

export type UpdateTeamRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: UpdateTeamAttributes;
};

export type UpdateTeamResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: Team;
};

export type User = {
    attributes: UserAttributes;
    id: string;
};

export type UserAssignment = {
    deadline: string;
    itemId: string;
    itemType: string;
    role: string;
    title: string;
};

export type UserAttributes = {
    email: string;
    name: string;
};

export type UserNotification = {
    attributes: UserNotificationAttributes;
    id: string;
};

export type UserNotificationAttributes = {
    text: string;
};

export type UserOncallDetails = {
    activeShifts: Array<OncallShift>;
    pastShifts: Array<OncallShift>;
    rosters: Array<OncallRoster>;
    upcomingShifts: Array<OncallShift>;
};

export type UserSession = {
    expiresAt: string;
    user: User;
};

export type VerifyDocumentEditorSessionRequestAttributes = {
    documentName: string;
};

export type VerifyDocumentEditorSessionRequestBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    attributes: VerifyDocumentEditorSessionRequestAttributes;
};

export type VerifyDocumentEditorSessionResponseBody = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    data: DocumentEditorSessionAuth;
};

export type ListDebriefQuestionsData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListDebriefQuestionsResponse = (ListIncidentDebriefQuestionsResponseBody);

export type ListDebriefQuestionsError = (ErrorModel);

export type CreateDebriefQuestionData = {
    body: CreateIncidentDebriefQuestionRequestBody;
};

export type CreateDebriefQuestionResponse = (CreateIncidentDebriefQuestionResponseBody);

export type CreateDebriefQuestionError = (ErrorModel);

export type GetDebriefQuestionData = {
    path: {
        id: string;
    };
};

export type GetDebriefQuestionResponse = (GetIncidentDebriefQuestionResponseBody);

export type GetDebriefQuestionError = (ErrorModel);

export type ArchiveDebriefQuestionData = {
    path: {
        id: string;
    };
};

export type ArchiveDebriefQuestionResponse = (void);

export type ArchiveDebriefQuestionError = (ErrorModel);

export type UpdateDebriefQuestionData = {
    body: UpdateIncidentDebriefQuestionRequestBody;
    path: {
        id: string;
    };
};

export type UpdateDebriefQuestionResponse = (UpdateIncidentDebriefQuestionResponseBody);

export type UpdateDebriefQuestionError = (ErrorModel);

export type RequestDocumentEditorSessionData = {
    body: RequestDocumentEditorSessionRequestBody;
};

export type RequestDocumentEditorSessionResponse = (RequestDocumentEditorSessionResponseBody);

export type RequestDocumentEditorSessionError = (ErrorModel);

export type VerifyDocumentEditorSessionData = {
    body: VerifyDocumentEditorSessionRequestBody;
};

export type VerifyDocumentEditorSessionResponse = (VerifyDocumentEditorSessionResponseBody);

export type VerifyDocumentEditorSessionError = (ErrorModel);

export type ListEnvironmentsData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListEnvironmentsResponse = (ListEnvironmentsResponseBody);

export type ListEnvironmentsError = (ErrorModel);

export type CreateEnvironmentData = {
    body: CreateEnvironmentRequestBody;
};

export type CreateEnvironmentResponse = (CreateEnvironmentResponseBody);

export type CreateEnvironmentError = (ErrorModel);

export type GetEnvironmentData = {
    path: {
        id: string;
    };
};

export type GetEnvironmentResponse = (GetEnvironmentResponseBody);

export type GetEnvironmentError = (ErrorModel);

export type ArchiveEnvironmentData = {
    path: {
        id: string;
    };
};

export type ArchiveEnvironmentResponse = (void);

export type ArchiveEnvironmentError = (ErrorModel);

export type UpdateEnvironmentData = {
    body: UpdateEnvironmentRequestBody;
    path: {
        id: string;
    };
};

export type UpdateEnvironmentResponse = (UpdateEnvironmentResponseBody);

export type UpdateEnvironmentError = (ErrorModel);

export type ListFunctionalitiesData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListFunctionalitiesResponse = (ListFunctionalitiesResponseBody);

export type ListFunctionalitiesError = (ErrorModel);

export type CreateFunctionalityData = {
    body: CreateFunctionalityRequestBody;
};

export type CreateFunctionalityResponse = (CreateFunctionalityResponseBody);

export type CreateFunctionalityError = (ErrorModel);

export type GetFunctionalityData = {
    path: {
        id: string;
    };
};

export type GetFunctionalityResponse = (GetFunctionalityResponseBody);

export type GetFunctionalityError = (ErrorModel);

export type ArchiveFunctionalityData = {
    path: {
        id: string;
    };
};

export type ArchiveFunctionalityResponse = (void);

export type ArchiveFunctionalityError = (ErrorModel);

export type UpdateFunctionalityData = {
    body: UpdateFunctionalityRequestBody;
    path: {
        id: string;
    };
};

export type UpdateFunctionalityResponse = (UpdateFunctionalityResponseBody);

export type UpdateFunctionalityError = (ErrorModel);

export type GetIncidentDebriefData = {
    path: {
        id: string;
    };
};

export type GetIncidentDebriefResponse = (GetIncidentDebriefResponseBody);

export type GetIncidentDebriefError = (ErrorModel);

export type UpdateIncidentDebriefData = {
    body: UpdateIncidentDebriefRequestBody;
    path: {
        id: string;
    };
};

export type UpdateIncidentDebriefResponse = (UpdateIncidentDebriefResponseBody);

export type UpdateIncidentDebriefError = (ErrorModel);

export type ListDebriefMessagesData = {
    path: {
        id: string;
    };
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListDebriefMessagesResponse = (ListIncidentDebriefMessagesResponseBody);

export type ListDebriefMessagesError = (ErrorModel);

export type AddIncidentDebriefUserMessageData = {
    body: AddIncidentDebriefUserMessageRequestBody;
    path: {
        id: string;
    };
};

export type AddIncidentDebriefUserMessageResponse = (AddIncidentDebriefUserMessageResponseBody);

export type AddIncidentDebriefUserMessageError = (ErrorModel);

export type ListDebriefSuggestionsData = {
    path: {
        id: string;
    };
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListDebriefSuggestionsResponse = (ListIncidentDebriefSuggestionsResponseBody);

export type ListDebriefSuggestionsError = (ErrorModel);

export type ListIncidentEventContributingFactorCategoriesData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListIncidentEventContributingFactorCategoriesResponse = (ListIncidentEventContributingFactorsResponseBody);

export type ListIncidentEventContributingFactorCategoriesError = (ErrorModel);

export type DeleteIncidentEventData = {
    path: {
        id: string;
    };
};

export type DeleteIncidentEventResponse = (void);

export type DeleteIncidentEventError = (ErrorModel);

export type UpdateIncidentEventData = {
    body: UpdateIncidentEventRequestBody;
    path: {
        id: string;
    };
};

export type UpdateIncidentEventResponse = (UpdateIncidentEventResponseBody);

export type UpdateIncidentEventError = (ErrorModel);

export type ListIncidentFieldsData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListIncidentFieldsResponse = (ListIncidentFieldsResponseBody);

export type ListIncidentFieldsError = (ErrorModel);

export type CreateIncidentFieldData = {
    body: CreateIncidentFieldRequestBody;
};

export type CreateIncidentFieldResponse = (CreateIncidentFieldResponseBody);

export type CreateIncidentFieldError = (ErrorModel);

export type GetIncidentFieldData = {
    path: {
        id: string;
    };
};

export type GetIncidentFieldResponse = (GetIncidentFieldResponseBody);

export type GetIncidentFieldError = (ErrorModel);

export type ArchiveIncidentFieldData = {
    path: {
        id: string;
    };
};

export type ArchiveIncidentFieldResponse = (void);

export type ArchiveIncidentFieldError = (ErrorModel);

export type UpdateIncidentFieldData = {
    body: UpdateIncidentFieldRequestBody;
    path: {
        id: string;
    };
};

export type UpdateIncidentFieldResponse = (UpdateIncidentFieldResponseBody);

export type UpdateIncidentFieldError = (ErrorModel);

export type ArchiveIncidentMilestoneData = {
    path: {
        id: string;
    };
};

export type ArchiveIncidentMilestoneResponse = (void);

export type ArchiveIncidentMilestoneError = (ErrorModel);

export type UpdateIncidentMilestoneData = {
    body: UpdateIncidentMilestoneRequestBody;
    path: {
        id: string;
    };
};

export type UpdateIncidentMilestoneResponse = (UpdateIncidentMilestoneResponseBody);

export type UpdateIncidentMilestoneError = (ErrorModel);

export type ListIncidentRolesData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListIncidentRolesResponse = (ListIncidentRolesResponseBody);

export type ListIncidentRolesError = (ErrorModel);

export type CreateIncidentRoleData = {
    body: CreateIncidentRoleRequestBody;
};

export type CreateIncidentRoleResponse = (CreateIncidentRoleResponseBody);

export type CreateIncidentRoleError = (ErrorModel);

export type GetIncidentRoleData = {
    path: {
        id: string;
    };
};

export type GetIncidentRoleResponse = (GetIncidentRoleResponseBody);

export type GetIncidentRoleError = (ErrorModel);

export type ArchiveIncidentRoleData = {
    path: {
        id: string;
    };
};

export type ArchiveIncidentRoleResponse = (void);

export type ArchiveIncidentRoleError = (ErrorModel);

export type UpdateIncidentRoleData = {
    body: UpdateIncidentRoleRequestBody;
    path: {
        id: string;
    };
};

export type UpdateIncidentRoleResponse = (UpdateIncidentRoleResponseBody);

export type UpdateIncidentRoleError = (ErrorModel);

export type ListIncidentSeveritiesData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListIncidentSeveritiesResponse = (ListIncidentSeveritiesResponseBody);

export type ListIncidentSeveritiesError = (ErrorModel);

export type CreateIncidentSeverityData = {
    body: CreateIncidentSeverityRequestBody;
};

export type CreateIncidentSeverityResponse = (CreateIncidentSeverityResponseBody);

export type CreateIncidentSeverityError = (ErrorModel);

export type GetIncidentSeverityData = {
    path: {
        id: string;
    };
};

export type GetIncidentSeverityResponse = (GetIncidentSeverityResponseBody);

export type GetIncidentSeverityError = (ErrorModel);

export type ArchiveIncidentSeverityData = {
    path: {
        id: string;
    };
};

export type ArchiveIncidentSeverityResponse = (void);

export type ArchiveIncidentSeverityError = (ErrorModel);

export type UpdateIncidentSeverityData = {
    body: UpdateIncidentSeverityRequestBody;
    path: {
        id: string;
    };
};

export type UpdateIncidentSeverityResponse = (UpdateIncidentSeverityResponseBody);

export type UpdateIncidentSeverityError = (ErrorModel);

export type ListIncidentTagsData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListIncidentTagsResponse = (ListIncidentTagsResponseBody);

export type ListIncidentTagsError = (ErrorModel);

export type CreateIncidentTagData = {
    body: CreateIncidentTagRequestBody;
};

export type CreateIncidentTagResponse = (CreateIncidentTagResponseBody);

export type CreateIncidentTagError = (ErrorModel);

export type GetIncidentTagData = {
    path: {
        id: string;
    };
};

export type GetIncidentTagResponse = (GetIncidentTagResponseBody);

export type GetIncidentTagError = (ErrorModel);

export type ArchiveIncidentTagData = {
    path: {
        id: string;
    };
};

export type ArchiveIncidentTagResponse = (void);

export type ArchiveIncidentTagError = (ErrorModel);

export type UpdateIncidentTagData = {
    body: UpdateIncidentTagRequestBody;
    path: {
        id: string;
    };
};

export type UpdateIncidentTagResponse = (UpdateIncidentTagResponseBody);

export type UpdateIncidentTagError = (ErrorModel);

export type ListIncidentTypesData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListIncidentTypesResponse = (ListIncidentTypesResponseBody);

export type ListIncidentTypesError = (ErrorModel);

export type CreateIncidentTypeData = {
    body: CreateIncidentTypeRequestBody;
};

export type CreateIncidentTypeResponse = (CreateIncidentTypeResponseBody);

export type CreateIncidentTypeError = (ErrorModel);

export type GetIncidentTypeData = {
    path: {
        id: string;
    };
};

export type GetIncidentTypeResponse = (GetIncidentTypeResponseBody);

export type GetIncidentTypeError = (ErrorModel);

export type ArchiveIncidentTypeData = {
    path: {
        id: string;
    };
};

export type ArchiveIncidentTypeResponse = (void);

export type ArchiveIncidentTypeError = (ErrorModel);

export type UpdateIncidentTypeData = {
    body: UpdateIncidentTypeRequestBody;
    path: {
        id: string;
    };
};

export type UpdateIncidentTypeResponse = (UpdateIncidentTypeResponseBody);

export type UpdateIncidentTypeError = (ErrorModel);

export type ListIncidentsData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
        teamId?: string;
    };
};

export type ListIncidentsResponse = (ListIncidentsResponseBody);

export type ListIncidentsError = (ErrorModel);

export type CreateIncidentData = {
    body: CreateIncidentRequestBody;
};

export type CreateIncidentResponse = (CreateIncidentResponseBody);

export type CreateIncidentError = (ErrorModel);

export type GetIncidentData = {
    path: {
        id: string;
    };
};

export type GetIncidentResponse = (GetIncidentResponseBody);

export type GetIncidentError = (ErrorModel);

export type ArchiveIncidentData = {
    path: {
        id: string;
    };
};

export type ArchiveIncidentResponse = (void);

export type ArchiveIncidentError = (ErrorModel);

export type UpdateIncidentData = {
    body: UpdateIncidentRequestBody;
    path: {
        id: string;
    };
};

export type UpdateIncidentResponse = (UpdateIncidentResponseBody);

export type UpdateIncidentError = (ErrorModel);

export type GetIncidentUserDebriefData = {
    path: {
        id: string;
    };
};

export type GetIncidentUserDebriefResponse = (GetIncidentUserDebriefResponseBody);

export type GetIncidentUserDebriefError = (ErrorModel);

export type ListIncidentEventsData = {
    path: {
        id: string;
    };
};

export type ListIncidentEventsResponse = (ListIncidentEventsResponseBody);

export type ListIncidentEventsError = (ErrorModel);

export type CreateIncidentEventData = {
    body: CreateIncidentEventRequestBody;
    path: {
        id: string;
    };
};

export type CreateIncidentEventResponse = (CreateIncidentEventResponseBody);

export type CreateIncidentEventError = (ErrorModel);

export type ListIncidentMilestonesData = {
    path: {
        id: string;
    };
};

export type ListIncidentMilestonesResponse = (ListIncidentMilestonesResponseBody);

export type ListIncidentMilestonesError = (ErrorModel);

export type CreateIncidentMilestoneData = {
    body: CreateIncidentMilestoneRequestBody;
    path: {
        id: string;
    };
};

export type CreateIncidentMilestoneResponse = (CreateIncidentMilestoneResponseBody);

export type CreateIncidentMilestoneError = (ErrorModel);

export type GetRetrospectiveForIncidentData = {
    path: {
        id: string;
    };
};

export type GetRetrospectiveForIncidentResponse = (GetRetrospectiveForIncidentResponseBody);

export type GetRetrospectiveForIncidentError = (ErrorModel);

export type ListIntegrationsData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListIntegrationsResponse = (ListIntegrationsResponseBody);

export type ListIntegrationsError = (ErrorModel);

export type CreateIntegrationData = {
    body: CreateIntegrationRequestBody;
};

export type CreateIntegrationResponse = (CreateIntegrationResponseBody);

export type CreateIntegrationError = (ErrorModel);

export type GetIntegrationData = {
    path: {
        id: string;
    };
};

export type GetIntegrationResponse = (GetIntegrationResponseBody);

export type GetIntegrationError = (ErrorModel);

export type ArchiveIntegrationData = {
    path: {
        id: string;
    };
};

export type ArchiveIntegrationResponse = (void);

export type ArchiveIntegrationError = (ErrorModel);

export type UpdateIntegrationData = {
    body: UpdateIntegrationRequestBody;
    path: {
        id: string;
    };
};

export type UpdateIntegrationResponse = (UpdateIntegrationResponseBody);

export type UpdateIntegrationError = (ErrorModel);

export type ListMeetingSchedulesData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListMeetingSchedulesResponse = (ListMeetingSchedulesResponseBody);

export type ListMeetingSchedulesError = (ErrorModel);

export type CreateMeetingScheduleData = {
    body: CreateMeetingScheduleRequestBody;
};

export type CreateMeetingScheduleResponse = (CreateMeetingScheduleResponseBody);

export type CreateMeetingScheduleError = (ErrorModel);

export type GetMeetingScheduleData = {
    path: {
        id: string;
    };
};

export type GetMeetingScheduleResponse = (GetMeetingScheduleResponseBody);

export type GetMeetingScheduleError = (ErrorModel);

export type ArchiveMeetingScheduleData = {
    path: {
        id: string;
    };
};

export type ArchiveMeetingScheduleResponse = (void);

export type ArchiveMeetingScheduleError = (ErrorModel);

export type UpdateMeetingScheduleData = {
    body: UpdateMeetingScheduleRequestBody;
    path: {
        id: string;
    };
};

export type UpdateMeetingScheduleResponse = (UpdateMeetingScheduleResponseBody);

export type UpdateMeetingScheduleError = (ErrorModel);

export type ListMeetingSessionsData = {
    query?: {
        archived?: boolean;
        from?: string;
        limit?: number;
        meetingScheduleId?: string;
        offset?: number;
        search?: string;
        teamId?: string;
        to?: string;
        userId?: string;
    };
};

export type ListMeetingSessionsResponse = (ListMeetingSessionsResponseBody);

export type ListMeetingSessionsError = (ErrorModel);

export type CreateMeetingSessionData = {
    body: CreateMeetingSessionRequestBody;
};

export type CreateMeetingSessionResponse = (CreateMeetingSessionResponseBody);

export type CreateMeetingSessionError = (ErrorModel);

export type GetMeetingSessionData = {
    path: {
        id: string;
    };
};

export type GetMeetingSessionResponse = (GetMeetingSessionResponseBody);

export type GetMeetingSessionError = (ErrorModel);

export type ArchiveMeetingSessionData = {
    path: {
        id: string;
    };
};

export type ArchiveMeetingSessionResponse = (void);

export type ArchiveMeetingSessionError = (ErrorModel);

export type UpdateMeetingSessionData = {
    body: UpdateMeetingSessionRequestBody;
    path: {
        id: string;
    };
};

export type UpdateMeetingSessionResponse = (UpdateMeetingSessionResponseBody);

export type UpdateMeetingSessionError = (ErrorModel);

export type ArchiveOncallShiftAnnotationData = {
    path: {
        id: string;
    };
};

export type ArchiveOncallShiftAnnotationResponse = (void);

export type ArchiveOncallShiftAnnotationError = (ErrorModel);

export type UpdateOncallShiftAnnotationData = {
    body: UpdateOncallShiftAnnotationRequestBody;
    path: {
        id: string;
    };
};

export type UpdateOncallShiftAnnotationResponse = (UpdateOncallShiftAnnotationResponseBody);

export type UpdateOncallShiftAnnotationError = (ErrorModel);

export type CreateOncallHandoverTemplateData = {
    body: CreateOncallShiftHandoverTemplateRequestBody;
};

export type CreateOncallHandoverTemplateResponse = (CreateOncallShiftHandoverTemplateResponseBody);

export type CreateOncallHandoverTemplateError = (ErrorModel);

export type GetOncallShiftHandoverTemplateData = {
    path: {
        id: string;
    };
};

export type GetOncallShiftHandoverTemplateResponse = (GetOncallShiftHandoverTemplateResponseBody);

export type GetOncallShiftHandoverTemplateError = (ErrorModel);

export type ArchiveOncallHandoverTemplateData = {
    path: {
        id: string;
    };
};

export type ArchiveOncallHandoverTemplateResponse = (void);

export type ArchiveOncallHandoverTemplateError = (ErrorModel);

export type UpdateOncallHandoverTemplateData = {
    body: UpdateOncallShiftHandoverTemplateRequestBody;
    path: {
        id: string;
    };
};

export type UpdateOncallHandoverTemplateResponse = (UpdateOncallShiftHandoverTemplateResponseBody);

export type UpdateOncallHandoverTemplateError = (ErrorModel);

export type ListOncallRostersData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        pinned?: boolean;
        search?: string;
        teamId?: string;
        userId?: string;
    };
};

export type ListOncallRostersResponse = (ListOncallRostersResponseBody);

export type ListOncallRostersError = (ErrorModel);

export type GetOncallRosterData = {
    path: {
        id: string;
    };
};

export type GetOncallRosterResponse = (GetOncallRosterResponseBody);

export type GetOncallRosterError = (ErrorModel);

export type ListOncallShiftsData = {
    query?: {
        active?: boolean;
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
        userId?: string;
    };
};

export type ListOncallShiftsResponse = (ListOncallShiftsResponseBody);

export type ListOncallShiftsError = (ErrorModel);

export type GetOncallShiftData = {
    path: {
        id: string;
    };
};

export type GetOncallShiftResponse = (GetOncallShiftResponseBody);

export type GetOncallShiftError = (ErrorModel);

export type ListOncallShiftAlertsData = {
    path: {
        id: string;
    };
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListOncallShiftAlertsResponse = (ListOncallShiftAlertsResponseBody);

export type ListOncallShiftAlertsError = (ErrorModel);

export type ListOncallShiftAnnotationsData = {
    path: {
        id: string;
    };
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListOncallShiftAnnotationsResponse = (ListOncallShiftAnnotationsResponseBody);

export type ListOncallShiftAnnotationsError = (ErrorModel);

export type CreateOncallShiftAnnotationData = {
    body: CreateOncallShiftAnnotationRequestBody;
    path: {
        id: string;
    };
};

export type CreateOncallShiftAnnotationResponse = (CreateOncallShiftAnnotationResponseBody);

export type CreateOncallShiftAnnotationError = (ErrorModel);

export type GetOncallShiftHandoverData = {
    path: {
        id: string;
    };
};

export type GetOncallShiftHandoverResponse = (GetOncallShiftHandoverResponseBody);

export type GetOncallShiftHandoverError = (ErrorModel);

export type SendOncallShiftHandoverData = {
    body: SendOncallShiftHandoverRequestBody;
    path: {
        id: string;
    };
};

export type SendOncallShiftHandoverResponse = (SendOncallShiftHandoverResponseBody);

export type SendOncallShiftHandoverError = (ErrorModel);

export type ListOncallShiftIncidentsData = {
    path: {
        id: string;
    };
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListOncallShiftIncidentsResponse = (ListOncallShiftIncidentsResponseBody);

export type ListOncallShiftIncidentsError = (ErrorModel);

export type GetNextOncallShiftData = {
    path: {
        id: string;
    };
};

export type GetNextOncallShiftResponse = (GetNextOncallShiftResponseBody);

export type GetNextOncallShiftError = (ErrorModel);

export type GetUserOncallDetailsData = {
    query?: {
        userId?: string;
    };
};

export type GetUserOncallDetailsResponse = (GetUserOncallDetailsResponseBody);

export type GetUserOncallDetailsError = (ErrorModel);

export type ArchiveRetrospectiveReviewData = {
    path: {
        id: string;
    };
};

export type ArchiveRetrospectiveReviewResponse = (void);

export type ArchiveRetrospectiveReviewError = (ErrorModel);

export type UpdateRetrospectiveReviewData = {
    body: UpdateRetrospectiveReviewRequestBody;
    path: {
        id: string;
    };
};

export type UpdateRetrospectiveReviewResponse = (UpdateRetrospectiveReviewResponseBody);

export type UpdateRetrospectiveReviewError = (ErrorModel);

export type ListRetrospectivesData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListRetrospectivesResponse = (ListRetrospectivesResponseBody);

export type ListRetrospectivesError = (ErrorModel);

export type GetRetrospectiveData = {
    path: {
        id: string;
    };
};

export type GetRetrospectiveResponse = (GetRetrospectiveResponseBody);

export type GetRetrospectiveError = (ErrorModel);

export type ListRetrospectiveDiscussionsData = {
    path: {
        id: string;
    };
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListRetrospectiveDiscussionsResponse = (ListRetrospectiveDiscussionsResponseBody);

export type ListRetrospectiveDiscussionsError = (ErrorModel);

export type CreateRetrospectiveDiscussionData = {
    body: CreateRetrospectiveDiscussionRequestBody;
    path: {
        id: string;
    };
};

export type CreateRetrospectiveDiscussionResponse = (CreateRetrospectiveDiscussionResponseBody);

export type CreateRetrospectiveDiscussionError = (ErrorModel);

export type GetRetrospectiveDiscussionData = {
    path: {
        discussionId: string;
        id: string;
    };
};

export type GetRetrospectiveDiscussionResponse = (GetRetrospectiveDiscussionResponseBody);

export type GetRetrospectiveDiscussionError = (ErrorModel);

export type AddRetrospectiveDiscussionReplyData = {
    body: AddRetrospectiveDiscussionReplyRequestBody;
};

export type AddRetrospectiveDiscussionReplyResponse = (AddRetrospectiveDiscussionReplyResponseBody);

export type AddRetrospectiveDiscussionReplyError = (ErrorModel);

export type UpdateRetrospectiveDiscussionData = {
    body: UpdateRetrospectiveDiscussionRequestBody;
};

export type UpdateRetrospectiveDiscussionResponse = (UpdateRetrospectiveDiscussionResponseBody);

export type UpdateRetrospectiveDiscussionError = (ErrorModel);

export type ListRetrospectiveReviewsData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListRetrospectiveReviewsResponse = (ListRetrospectiveReviewsResponseBody);

export type ListRetrospectiveReviewsError = (ErrorModel);

export type CreateRetrospectiveReviewData = {
    body: CreateRetrospectiveReviewRequestBody;
    path: {
        id: string;
    };
};

export type CreateRetrospectiveReviewResponse = (CreateRetrospectiveReviewResponseBody);

export type CreateRetrospectiveReviewError = (ErrorModel);

export type GetSystemAnalysisComponentData = {
    path: {
        analysisId: string;
        entityId: string;
    };
};

export type GetSystemAnalysisComponentResponse = (GetSystemAnalysisComponentResponseBody);

export type GetSystemAnalysisComponentError = (ErrorModel);

export type DeleteSystemAnalysisComponentData = {
    path: {
        analysisId: string;
        entityId: string;
    };
};

export type DeleteSystemAnalysisComponentResponse = (void);

export type DeleteSystemAnalysisComponentError = (ErrorModel);

export type UpdateSystemAnalysisComponentData = {
    body: UpdateSystemAnalysisComponentRequestBody;
    path: {
        analysisId: string;
        entityId: string;
    };
};

export type UpdateSystemAnalysisComponentResponse = (UpdateSystemAnalysisComponentResponseBody);

export type UpdateSystemAnalysisComponentError = (ErrorModel);

export type GetSystemAnalysisRelationshipData = {
    path: {
        analysisId: string;
        entityId: string;
    };
};

export type GetSystemAnalysisRelationshipResponse = (GetSystemAnalysisRelationshipResponseBody);

export type GetSystemAnalysisRelationshipError = (ErrorModel);

export type DeleteSystemAnalysisRelationshipData = {
    path: {
        analysisId: string;
        entityId: string;
    };
};

export type DeleteSystemAnalysisRelationshipResponse = (void);

export type DeleteSystemAnalysisRelationshipError = (ErrorModel);

export type UpdateSystemAnalysisRelationshipData = {
    body: UpdateSystemAnalysisRelationshipRequestBody;
    path: {
        analysisId: string;
        entityId: string;
    };
};

export type UpdateSystemAnalysisRelationshipResponse = (UpdateSystemAnalysisRelationshipResponseBody);

export type UpdateSystemAnalysisRelationshipError = (ErrorModel);

export type GetSystemAnalysisData = {
    path: {
        id: string;
    };
};

export type GetSystemAnalysisResponse = (GetSystemAnalysisResponseBody);

export type GetSystemAnalysisError = (ErrorModel);

export type ListSystemAnalysisComponentsData = {
    path: {
        id: string;
    };
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListSystemAnalysisComponentsResponse = (ListSystemAnalysisComponentsResponseBody);

export type ListSystemAnalysisComponentsError = (ErrorModel);

export type AddSystemAnalysisComponentData = {
    body: AddSystemAnalysisComponentRequestBody;
    path: {
        id: string;
    };
};

export type AddSystemAnalysisComponentResponse = (AddSystemAnalysisComponentResponseBody);

export type AddSystemAnalysisComponentError = (ErrorModel);

export type ListSystemAnalysisRelationshipsData = {
    path: {
        id: string;
    };
    query?: {
        analysisComponentId?: string;
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListSystemAnalysisRelationshipsResponse = (ListSystemAnalysisRelationshipsResponseBody);

export type ListSystemAnalysisRelationshipsError = (ErrorModel);

export type CreateSystemAnalysisRelationshipData = {
    body: CreateSystemAnalysisRelationshipRequestBody;
    path: {
        id: string;
    };
};

export type CreateSystemAnalysisRelationshipResponse = (CreateSystemAnalysisRelationshipResponseBody);

export type CreateSystemAnalysisRelationshipError = (ErrorModel);

export type ListSystemComponentKindsData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListSystemComponentKindsResponse = (ListSystemComponentKindsResponseBody);

export type ListSystemComponentKindsError = (ErrorModel);

export type CreateSystemComponentKindData = {
    body: CreateSystemComponentKindRequestBody;
};

export type CreateSystemComponentKindResponse = (CreateSystemComponentKindResponseBody);

export type CreateSystemComponentKindError = (ErrorModel);

export type GetSystemComponentKindData = {
    path: {
        id: string;
    };
};

export type GetSystemComponentKindResponse = (GetSystemComponentKindResponseBody);

export type GetSystemComponentKindError = (ErrorModel);

export type ArchiveSystemComponentKindData = {
    path: {
        id: string;
    };
};

export type ArchiveSystemComponentKindResponse = (void);

export type ArchiveSystemComponentKindError = (ErrorModel);

export type UpdateSystemComponentKindData = {
    body: UpdateSystemComponentKindRequestBody;
    path: {
        id: string;
    };
};

export type UpdateSystemComponentKindResponse = (UpdateSystemComponentKindResponseBody);

export type UpdateSystemComponentKindError = (ErrorModel);

export type ListSystemComponentsData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListSystemComponentsResponse = (ListSystemComponentsResponseBody);

export type ListSystemComponentsError = (ErrorModel);

export type CreateSystemComponentData = {
    body: CreateSystemComponentRequestBody;
};

export type CreateSystemComponentResponse = (CreateSystemComponentResponseBody);

export type CreateSystemComponentError = (ErrorModel);

export type GetSystemComponentConstraintData = {
    path: {
        componentId: string;
        constraintId: string;
    };
};

export type GetSystemComponentConstraintResponse = (GetSystemComponentConstraintResponseBody);

export type GetSystemComponentConstraintError = (ErrorModel);

export type ArchiveSystemComponentConstraintData = {
    path: {
        componentId: string;
        constraintId: string;
    };
};

export type ArchiveSystemComponentConstraintResponse = (void);

export type ArchiveSystemComponentConstraintError = (ErrorModel);

export type UpdateSystemComponentConstraintData = {
    body: UpdateSystemComponentConstraintRequestBody;
    path: {
        componentId: string;
        constraintId: string;
    };
};

export type UpdateSystemComponentConstraintResponse = (UpdateSystemComponentConstraintResponseBody);

export type UpdateSystemComponentConstraintError = (ErrorModel);

export type GetSystemComponentControlData = {
    path: {
        componentId: string;
        controlId: string;
    };
};

export type GetSystemComponentControlResponse = (GetSystemComponentControlResponseBody);

export type GetSystemComponentControlError = (ErrorModel);

export type ArchiveSystemComponentControlData = {
    path: {
        componentId: string;
        controlId: string;
    };
};

export type ArchiveSystemComponentControlResponse = (void);

export type ArchiveSystemComponentControlError = (ErrorModel);

export type UpdateSystemComponentControlData = {
    body: UpdateSystemComponentControlRequestBody;
    path: {
        componentId: string;
        controlId: string;
    };
};

export type UpdateSystemComponentControlResponse = (UpdateSystemComponentControlResponseBody);

export type UpdateSystemComponentControlError = (ErrorModel);

export type GetSystemComponentSignalData = {
    path: {
        componentId: string;
        signalId: string;
    };
};

export type GetSystemComponentSignalResponse = (GetSystemComponentSignalResponseBody);

export type GetSystemComponentSignalError = (ErrorModel);

export type ArchiveSystemComponentSignalData = {
    path: {
        componentId: string;
        signalId: string;
    };
};

export type ArchiveSystemComponentSignalResponse = (void);

export type ArchiveSystemComponentSignalError = (ErrorModel);

export type UpdateSystemComponentSignalData = {
    body: UpdateSystemComponentSignalRequestBody;
    path: {
        componentId: string;
        signalId: string;
    };
};

export type UpdateSystemComponentSignalResponse = (UpdateSystemComponentSignalResponseBody);

export type UpdateSystemComponentSignalError = (ErrorModel);

export type GetSystemComponentData = {
    path: {
        id: string;
    };
};

export type GetSystemComponentResponse = (GetSystemComponentResponseBody);

export type GetSystemComponentError = (ErrorModel);

export type ArchiveSystemComponentData = {
    path: {
        id: string;
    };
};

export type ArchiveSystemComponentResponse = (void);

export type ArchiveSystemComponentError = (ErrorModel);

export type UpdateSystemComponentData = {
    body: UpdateSystemComponentRequestBody;
    path: {
        id: string;
    };
};

export type UpdateSystemComponentResponse = (UpdateSystemComponentResponseBody);

export type UpdateSystemComponentError = (ErrorModel);

export type CreateSystemComponentConstraintData = {
    body: CreateSystemComponentConstraintRequestBody;
    path: {
        id: string;
    };
};

export type CreateSystemComponentConstraintResponse = (CreateSystemComponentConstraintResponseBody);

export type CreateSystemComponentConstraintError = (ErrorModel);

export type CreateSystemComponentControlData = {
    body: CreateSystemComponentControlRequestBody;
    path: {
        id: string;
    };
};

export type CreateSystemComponentControlResponse = (CreateSystemComponentControlResponseBody);

export type CreateSystemComponentControlError = (ErrorModel);

export type CreateSystemComponentSignalData = {
    body: CreateSystemComponentSignalRequestBody;
    path: {
        id: string;
    };
};

export type CreateSystemComponentSignalResponse = (CreateSystemComponentSignalResponseBody);

export type CreateSystemComponentSignalError = (ErrorModel);

export type ListTasksData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
        teamId?: string;
    };
};

export type ListTasksResponse = (ListTasksResponseBody);

export type ListTasksError = (ErrorModel);

export type CreateTaskData = {
    body: CreateTaskRequestBody;
};

export type CreateTaskResponse = (CreateTaskResponseBody);

export type CreateTaskError = (ErrorModel);

export type GetTaskData = {
    path: {
        id: string;
    };
};

export type GetTaskResponse = (GetTaskResponseBody);

export type GetTaskError = (ErrorModel);

export type ArchiveTaskData = {
    path: {
        id: string;
    };
};

export type ArchiveTaskResponse = (void);

export type ArchiveTaskError = (ErrorModel);

export type UpdateTaskData = {
    body: UpdateTaskRequestBody;
    path: {
        id: string;
    };
};

export type UpdateTaskResponse = (UpdateTaskResponseBody);

export type UpdateTaskError = (ErrorModel);

export type ListTeamsData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListTeamsResponse = (ListTeamsResponseBody);

export type ListTeamsError = (ErrorModel);

export type CreateTeamData = {
    body: CreateTeamRequestBody;
};

export type CreateTeamResponse = (CreateTeamResponseBody);

export type CreateTeamError = (ErrorModel);

export type GetTeamData = {
    path: {
        id: string;
    };
};

export type GetTeamResponse = (GetTeamResponseBody);

export type GetTeamError = (ErrorModel);

export type ArchiveTeamData = {
    path: {
        id: string;
    };
};

export type ArchiveTeamResponse = (void);

export type ArchiveTeamError = (ErrorModel);

export type UpdateTeamsData = {
    body: UpdateTeamRequestBody;
    path: {
        id: string;
    };
};

export type UpdateTeamsResponse = (UpdateTeamResponseBody);

export type UpdateTeamsError = (ErrorModel);

export type GetCurrentUserSessionResponse = (GetUserSessionResponseBody);

export type GetCurrentUserSessionError = (ErrorModel);

export type ListUserAssignmentsData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListUserAssignmentsResponse = (ListUserAssignmentsResponseBody);

export type ListUserAssignmentsError = (ErrorModel);

export type ListUserNotificationsData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
    };
};

export type ListUserNotificationsResponse = (ListNotificationsResponseBody);

export type ListUserNotificationsError = (ErrorModel);

export type DeleteUserNotificationData = {
    path: {
        id: string;
    };
};

export type DeleteUserNotificationResponse = (void);

export type DeleteUserNotificationError = (ErrorModel);

export type ListUsersData = {
    query?: {
        archived?: boolean;
        limit?: number;
        offset?: number;
        search?: string;
        teamId?: string;
    };
};

export type ListUsersResponse = (ListUsersResponseBody);

export type ListUsersError = (ErrorModel);

export type GetUserData = {
    path: {
        id: string;
    };
};

export type GetUserResponse = (GetUserResponseBody);

export type GetUserError = (ErrorModel);